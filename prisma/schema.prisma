// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Student {
  id Int @id @default(autoincrement())
  registrationNumber String @unique
  email String @unique
  name String
  password String
  active Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  verifiedByAdmin Boolean @default(false)

  ActivateToken ActivateToken[]
  Uploads Uploads[]
  Bought Bought[]
  Issued Issued[]
  Invoice Invoice[]
}

model ActivateToken {
  id Int @id @default(autoincrement())
  token String @unique
  activatedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student Student @relation(fields: [studentId], references: [id])
  studentId Int
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  hashedPassword    String
  registrationNumber String
}

model Uploads {
  id Int @id @default(autoincrement())
  student Student @relation(fields: [studentId], references: [registrationNumber])
  studentId String @unique
  type Int
  verified Boolean @default(false)
  fileUrl String
}

model Bought {
  id Int @id @default(autoincrement())
  student Student @relation(fields: [studentId], references: [registrationNumber])
  studentId String @unique
  type Int
  date DateTime @default(now())
  issued Boolean @default(false) 
  Issued Issued[]
}

model Issued {
  id Int @id @default(autoincrement())
  student Student @relation(fields: [studentId], references: [registrationNumber])
  studentId String @unique
  date DateTime @default(now())
  ticket Bought @relation(fields: [ticketId], references: [id])
  ticketId Int @unique
}

model Invoice {
  id Int @id @default(autoincrement())
  student Student @relation(fields: [studentId], references: [registrationNumber])
  studentId String @unique
  invoice_number String @unique
}

